[
    {
        "label": "FlaskForm",
        "importPath": "flask_wtf",
        "description": "flask_wtf",
        "isExtraImport": true,
        "detail": "flask_wtf",
        "documentation": {}
    },
    {
        "label": "StringField",
        "importPath": "wtforms",
        "description": "wtforms",
        "isExtraImport": true,
        "detail": "wtforms",
        "documentation": {}
    },
    {
        "label": "SubmitField",
        "importPath": "wtforms",
        "description": "wtforms",
        "isExtraImport": true,
        "detail": "wtforms",
        "documentation": {}
    },
    {
        "label": "PasswordField",
        "importPath": "wtforms",
        "description": "wtforms",
        "isExtraImport": true,
        "detail": "wtforms",
        "documentation": {}
    },
    {
        "label": "DataRequired",
        "importPath": "wtforms.validators",
        "description": "wtforms.validators",
        "isExtraImport": true,
        "detail": "wtforms.validators",
        "documentation": {}
    },
    {
        "label": "URL",
        "importPath": "wtforms.validators",
        "description": "wtforms.validators",
        "isExtraImport": true,
        "detail": "wtforms.validators",
        "documentation": {}
    },
    {
        "label": "CKEditorField",
        "importPath": "flask_ckeditor",
        "description": "flask_ckeditor",
        "isExtraImport": true,
        "detail": "flask_ckeditor",
        "documentation": {}
    },
    {
        "label": "CKEditor",
        "importPath": "flask_ckeditor",
        "description": "flask_ckeditor",
        "isExtraImport": true,
        "detail": "flask_ckeditor",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "flash",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Bootstrap",
        "importPath": "flask_bootstrap",
        "description": "flask_bootstrap",
        "isExtraImport": true,
        "detail": "flask_bootstrap",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "generate_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "check_password_hash",
        "importPath": "werkzeug.security",
        "description": "werkzeug.security",
        "isExtraImport": true,
        "detail": "werkzeug.security",
        "documentation": {}
    },
    {
        "label": "SQLAlchemy",
        "importPath": "flask_sqlalchemy",
        "description": "flask_sqlalchemy",
        "isExtraImport": true,
        "detail": "flask_sqlalchemy",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "UserMixin",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "LoginManager",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "current_user",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "importPath": "flask_login",
        "description": "flask_login",
        "isExtraImport": true,
        "detail": "flask_login",
        "documentation": {}
    },
    {
        "label": "CreatePostForm",
        "importPath": "forms",
        "description": "forms",
        "isExtraImport": true,
        "detail": "forms",
        "documentation": {}
    },
    {
        "label": "Gravatar",
        "importPath": "flask_gravatar",
        "description": "flask_gravatar",
        "isExtraImport": true,
        "detail": "flask_gravatar",
        "documentation": {}
    },
    {
        "label": "CreatePostForm",
        "kind": 6,
        "importPath": "forms",
        "description": "forms",
        "peekOfCode": "class CreatePostForm(FlaskForm):\n    title = StringField(\"Blog Post Title\", validators=[DataRequired()])\n    subtitle = StringField(\"Subtitle\", validators=[DataRequired()])\n    img_url = StringField(\"Blog Image URL\", validators=[DataRequired(), URL()])\n    body = CKEditorField(\"Blog Content\", validators=[DataRequired()])\n    submit = SubmitField(\"Submit Post\")",
        "detail": "forms",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"\n    id = db.Column(db.Integer, primary_key=True)\n    author = db.Column(db.String(250), nullable=False)\n    title = db.Column(db.String(250), unique=True, nullable=False)\n    subtitle = db.Column(db.String(250), nullable=False)\n    date = db.Column(db.String(250), nullable=False)\n    body = db.Column(db.Text, nullable=False)\n    img_url = db.Column(db.String(250), nullable=False)\ndb.create_all()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_all_posts",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_all_posts():\n    posts = BlogPost.query.all()\n    return render_template(\"index.html\", all_posts=posts)\n@app.route('/register')\ndef register():\n    return render_template(\"register.html\")\n@app.route('/login')\ndef login():\n    return render_template(\"login.html\")\n@app.route('/logout')",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def register():\n    return render_template(\"register.html\")\n@app.route('/login')\ndef login():\n    return render_template(\"login.html\")\n@app.route('/logout')\ndef logout():\n    return redirect(url_for('get_all_posts'))\n@app.route(\"/post/<int:post_id>\")\ndef show_post(post_id):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def login():\n    return render_template(\"login.html\")\n@app.route('/logout')\ndef logout():\n    return redirect(url_for('get_all_posts'))\n@app.route(\"/post/<int:post_id>\")\ndef show_post(post_id):\n    requested_post = BlogPost.query.get(post_id)\n    return render_template(\"post.html\", post=requested_post)\n@app.route(\"/about\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "logout",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def logout():\n    return redirect(url_for('get_all_posts'))\n@app.route(\"/post/<int:post_id>\")\ndef show_post(post_id):\n    requested_post = BlogPost.query.get(post_id)\n    return render_template(\"post.html\", post=requested_post)\n@app.route(\"/about\")\ndef about():\n    return render_template(\"about.html\")\n@app.route(\"/contact\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "show_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def show_post(post_id):\n    requested_post = BlogPost.query.get(post_id)\n    return render_template(\"post.html\", post=requested_post)\n@app.route(\"/about\")\ndef about():\n    return render_template(\"about.html\")\n@app.route(\"/contact\")\ndef contact():\n    return render_template(\"contact.html\")\n@app.route(\"/new-post\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def about():\n    return render_template(\"about.html\")\n@app.route(\"/contact\")\ndef contact():\n    return render_template(\"contact.html\")\n@app.route(\"/new-post\")\ndef add_new_post():\n    form = CreatePostForm()\n    if form.validate_on_submit():\n        new_post = BlogPost(",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "contact",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def contact():\n    return render_template(\"contact.html\")\n@app.route(\"/new-post\")\ndef add_new_post():\n    form = CreatePostForm()\n    if form.validate_on_submit():\n        new_post = BlogPost(\n            title=form.title.data,\n            subtitle=form.subtitle.data,\n            body=form.body.data,",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "add_new_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def add_new_post():\n    form = CreatePostForm()\n    if form.validate_on_submit():\n        new_post = BlogPost(\n            title=form.title.data,\n            subtitle=form.subtitle.data,\n            body=form.body.data,\n            img_url=form.img_url.data,\n            author=current_user,\n            date=date.today().strftime(\"%B %d, %Y\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "edit_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def edit_post(post_id):\n    post = BlogPost.query.get(post_id)\n    edit_form = CreatePostForm(\n        title=post.title,\n        subtitle=post.subtitle,\n        img_url=post.img_url,\n        author=post.author,\n        body=post.body\n    )\n    if edit_form.validate_on_submit():",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "delete_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def delete_post(post_id):\n    post_to_delete = BlogPost.query.get(post_id)\n    db.session.delete(post_to_delete)\n    db.session.commit()\n    return redirect(url_for('get_all_posts'))\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', port=5000)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = Flask(__name__)\napp.config['SECRET_KEY'] = '8BYkEfBA6O6donzWlSihBXox7C0sKR6b'\nckeditor = CKEditor(app)\nBootstrap(app)\n##CONNECT TO DB\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\ndb = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app.config['SECRET_KEY']",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app.config['SECRET_KEY'] = '8BYkEfBA6O6donzWlSihBXox7C0sKR6b'\nckeditor = CKEditor(app)\nBootstrap(app)\n##CONNECT TO DB\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\ndb = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "ckeditor",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "ckeditor = CKEditor(app)\nBootstrap(app)\n##CONNECT TO DB\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\ndb = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"\n    id = db.Column(db.Integer, primary_key=True)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app.config['SQLALCHEMY_DATABASE_URI']",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///blog.db'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\ndb = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"\n    id = db.Column(db.Integer, primary_key=True)\n    author = db.Column(db.String(250), nullable=False)\n    title = db.Column(db.String(250), unique=True, nullable=False)\n    subtitle = db.Column(db.String(250), nullable=False)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app.config['SQLALCHEMY_TRACK_MODIFICATIONS']",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\ndb = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"\n    id = db.Column(db.Integer, primary_key=True)\n    author = db.Column(db.String(250), nullable=False)\n    title = db.Column(db.String(250), unique=True, nullable=False)\n    subtitle = db.Column(db.String(250), nullable=False)\n    date = db.Column(db.String(250), nullable=False)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "db",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "db = SQLAlchemy(app)\n##CONFIGURE TABLES\nclass BlogPost(db.Model):\n    __tablename__ = \"blog_posts\"\n    id = db.Column(db.Integer, primary_key=True)\n    author = db.Column(db.String(250), nullable=False)\n    title = db.Column(db.String(250), unique=True, nullable=False)\n    subtitle = db.Column(db.String(250), nullable=False)\n    date = db.Column(db.String(250), nullable=False)\n    body = db.Column(db.Text, nullable=False)",
        "detail": "main",
        "documentation": {}
    }
]